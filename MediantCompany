//Folio Company

Option Explicit

Private p_company_name as String
Private p_file_type as String
Private p_job_num as String
Private p_cusip as String
Private p_nzz as String
Private p_nzz_line as String
Private p_pp_vote_records(60) as FolioVoteInfo
Private p_pp_vote_record_idx as Integer
Private p_mediant_vote_records(60) as FolioVoteInfo
Private p_vote_record_statuses(60) as String
Private p_mediant_vote_record_idx as Integer
Private p_voted_shares as Double
Private p_mediant_file_path as String
Private p_status as String
Private p_pp_swop_abstain as Double
Private p_mediant_swop_abstain as Double

Public meet_date as String

Public Property Let pp_swop_abstain(val as Double)
	p_pp_swop_abstain = val
End Property

Public Property Get pp_swop_abstain() as Double
	pp_swop_abstain = p_pp_swop_abstain
End Property

Public Property Let mediant_swop_abstain(val as Double)
	p_mediant_swop_abstain = val
End Property

Public Property Get mediant_swop_abstain() as Double
	mediant_swop_abstain = p_mediant_swop_abstain
End Property

Public Property Get mediant_file_path() as String
	mediant_file_path = p_mediant_file_path
End Property

Public Property Let mediant_file_path(val as String)
	p_mediant_file_path = val
End Property

Public Property Get status() as String
	status = p_status
End Property

Public Property Let status(val as String)
	p_status = val
End Property

Public Property Get Session() as Object
	Set Session = GetObject("RIBM")
End Property

Public Property Get company_name() as String
	company_name = p_company_name
End Property

Public Property Let company_name(val as String)
	p_company_nam = val
End Property

Public Property Let file_type(val as String)
	p_file_type = val
End Property

Public Property Let job_num(val as String)
	p_job_num = val
End Property

Public Property Let cusip(val as String)
	p_cusip = val
End Property

Public Property Let voted_shares(val as Double)
	p_voted_shares = val
End Property


Public Sub add_pp_vote_record(vote_record as FolioVoteInfo)
	Set p_pp_vote_records(p_pp_vote_record_idx) = vote_record
	p_pp_vote_record_idx = p_pp_vote_record_idx + 1
End Sub


Public Sub add_mediant_vote_record(vote_record as FolioVoteInfo)
	Set p_mediant_vote_records(p_mediant_vote_record_idx) = vote_record
	p_mediant_vote_record_idx = p_mediant_vote_record_idx + 1
End Sub


Public Sub Class_Initialize()
	p_pp_vote_record_idx = 0
	p_mediant_vote_record_idx = 0
	p_nzz_line = "I01-NZZ-I02"
End Sub


Public Sub move_to_one_screen()
	Dim i as Integer
	i = 0
	With Session
		Do While .GetDisplayTex(1, 2, 13) <> "CCV02M CCV02I"
			.TransmitTerminalKey rcIBMPf1Key
			.WaitForEvent rcKbdEnabled, "60", "0", 1, 1
			i = i + 1
			If i > 20 Then
				Exit Sub
			End If
		Loop
	End With
End Sub


Public Sub set_info(comp_name as String, file_type as String, job_num as String, cusip as String)
	p_company_name = comp_name
	p_file_type = file_type
	p_job_num = job_num
	p_cusip = format_cusip(cusip)
End Sub


Private Function format_cusip(cusip as String)
	Do While Len(cusip) < 9
		cusip = "0" & cusip
	Loop
	format_cusip = cusip
End Function


Public Sub move_to_vote_screen()
	Dim nzz_line_num as Integer

	With Session
		.MoveCursor 4, 9
		.TransmitANSI p_job_num

		.MoveCursor 4, 24
		.TransmitANSI p_cusip

		.MoveCursor 7, 11
		.TransmitANSI "    "

		.MoveCursor 7, 28
		.TransmitANSI "    "

		.TransmitTerminalKey rcIBMEnterKey
		.WaitForEvent rcKbdEnabled, "60", "0", 1, 1
		

		nzz_line_num = calculate_nzz_line_num()

		.MoveCursor nzz_line_num, 2
		.TransmitTerminalKey rcIBMEnterKey
		.WaitForEvent rcKbdEnabled, "60", "0", 1, 1
		.MoveCursor 19, 36
		.TransmitANSI 2
		.TransmitTerminalKey rcIBMEnterKey
		.WaitForEvent rcKbdEnabled, "60", "0", 1, 1
	End With	
End Sub


Public Sub get_vote_records_from_pp()

	Me.move_to_one_screen
	Me.move_to_vote_screen

	Dim idk as String
	Dim vote_info as FolioVoteInfo
	Dim r as Integer

	With Session
		Do While .GetDisplayText(23, 2, 14) <> "AT LAST RECORD"
			For r = 10 to 19
				If Trim(.GetDisplayText(r, 15, 17)) = "" Then
					Exit For
				End If

				If Trim(.GetDisplaytext(r, 31, 17)) = "" Then
					get_votes_from_sub_screen
				Else
					Set vote_info = New FolioVoteInfo
					vote_info.prop_number = Trim(.GetDisplaytext(r, 31, 17))
					vote_info.for_votes = .GetDisplaytext(r, 15, 17)
					vote_info.against_votes = .GetDisplaytext(r, 31, 17)
					vote_info.abstain_votes = .GetDisplaytext(r, 54, 17)

					Me.add_pp_vote_record vote_info
					
				End If
			Next r

			.TransmitTerminalKey rcIBMPf2Key
			.WaitForEvent rcKbdEnabled, "60", "0", 1, 1
		
		Loop
	End With
End Sub


Public Sub get_votes_records_from_mediant()
	Dim row_ as Integer
	Dim idk as String
	Dim vote_record as FolioVoteInfo

	Dim mediant_wb as Workbook
	Set mediant_wb = Workbooks.Open(p_mediant_file_path)

	p_cusip = mediant_wb.Sheets("OutputData").Cells(4, 1).Value2
	p_job_num = mediant_wb.Sheets("OutputData").Cells(4, 2).Value2

	With mediant_wb.Sheets("OutputData")
		row_ = 1
		idk = .Cells(row_, 1).Value2

		Do While .Cells(row_, 1).Value2 <> "Issuer"
			row_ = row_ + 1
		Loop
		row_ = row_ + 1

		Do While idk <> ""
			Set vote_record = New FolioVoteInfo
			vote_record.prop_number = .Cells(row_, 4).Value2
			vote_record.for_votes = .Cells(row_, 5).Value2
			vote_record.against_votes = .Cells(row_, 6).Value2
			vote_record.abstain_votes = .Cells(row_, 7).Value2
			vote_record.one_year_votes = .Cells(row_, 8).Value2
			vote_record.two_year_votes = .Cells(row_, 9).Value2
			vote_record.three_year_votes = .Cells(row_, 10).Value2
			vote_record.withhold_votes = .Cells(row_, 11).Value2

			With vote_record
				If (.for_votes + .against_votes + .abstain_votes + .one_year_votes + .two_year_votes + .three_year_votes + .withhold_votes) = 0 Then
					GoTo InvalidVoteRecordLabel
				End If
			End With

			If vote_record.withhold_votes > 0 And vote_record.abstain_votes = 0 Then
				vote_record.abstain_votes = vote_record.withhold_votes
			End If

			If vote_record.one_year_votes > 0 and vote_record.for_votes = 0 Then
				vote_record.for_votes = vote_record.one_year_votes
			End If

			If vote_record.two_year_votes > 0 and vote_record.against_votes = 0 Then
				vote_record.against_votes = vote_record.two_year_votes
			End If

			If vote_record.abstain_votes > 0 and (vote_record.one_year_votes + vote_record.two_year_votes + vote_record.three_year_votes) > 0 Then
				Me.mediant_swop_abstain = vote_record.abstain_votes
				vote_record.abstain_votes = vote_record.three_year_votes
			End If

			Me.add_mediant_vote_record vote_record

InvalidVoteRecordLabel:
			row_ = row_ + 1
			idk = .Cells(row_, 1).Value2			
		Loop

	End With

	mediant_wb.Close SaveChanges:=False

End Sub


Sub get_votes_from_main_screen(Optional start_row as Integer = 10)
	Dim vote_info as FolioVoteInfo
	Dim r as Integer

	With Session
		Do While .GetDisplayText(23, 2, 14) <> "AT LAST RECORD"
			For r = start_row to 19
				Set vote_info = New FolioVoteInfo

				If Trim(.GetDisplayText(r, 15, 17)) = "" Thne
					Exit For
				End If

				vote_info.prop_number = Trim(.GetDisplayText(r, 8, 4))
				vote_info.for_votes = .GetDisplayText(r, 15, 17)
				vote_info.against_votes = .GetDisplayText(r, 31, 17)
				vote_info.abstain_votes = .GetDisplayText(r, 54, 17)
			Next r

			.TransmitTerminalKey rcIBMPf2Key
			.WaitForEvent rcKbdEnabled, "60", "0", 1, 1
		Loop
	End With
	
End Sub


Sub get_votes_from_sub_screen()
	Dim r as Integer
	Dim vote_info as FolioVoteInfo
	Dim for_votes as Double
	Dim against_votes as Double
	Dim abstain_votes as Double

	With Session
		.MoveCursor 10, 21
		.TransmitTerminalKey rcIBMPf5Key
		.WaitForEvent rcKbdEnabled, "60", "0", 1, 1

		Do While .GetDisplayText(23, 2, 14) <> "AT LAST RECORD"
			For r = 11 to 21
				Set vote_info = New FolioVoteInfo

				If Trim(.GetDisplayText(r, 37, 27)) = "" Thne
					Exit For
				End If

				against_votes = 0
				abstain_votes = Trim(.GetDisplayText(r, 37, 27))
				for_votes = p_voted_shares - abstain_votes

				vote_info.prop_number = Trim(.GetDisplayText(r, 1, 3))
				vote_info.for_votes = for_votes
				vote_info.against_votes = against_votes
				vote_info.abstain_votes = abstain_votes

				Me.add_pp_vote_record vote_info
			Next r

			.TransmitTerminalKey rcIBMPf2Key
			.WaitForEvent rcKbdEnabled, "60", "0", 1, 1
		Loop

		.TransmitTerminalKey rcIBMPf2Key
		.WaitForEvent rcKbdEnabled, "60", "0", 1, 1

	End With

End Sub


Private Function calculate_nzz_line_num()
	Dim r as Integer
	Dim idk as String

	r = 11

	With Session
		idk = .GetDisplayText(r, 3, 11)
		Do While idk <> p_nzz_line
			r = r + 1
			idk = .GetDisplayText(r, 3, 11)
		Loop
	End With

	calculate_nzz_line_num
	
End Function


Public Sub compare_vote_records()

	Dim i as Integer
	Dim fv as FolioVoteInfo
	Dim pp as FolioVoteInfo
	Dim idk as String

	If p_folio_vote_record_idx <> p_pp_vote_record_idx Then
		p_status = "Number of Votes between PP and Folio not equal"
		Exit Sub
	End If

	For i = 0 to p_folio_vote_record_idx - 1
		Set fv = p_folio_vote_records(i)
		Set pp = p_pp_vote_records(i)

		If fv.for_votes = pp.for_votes And fv.abstain_votes = pp.abstain_votes And fv.against_votes = pp.against_votes Then
			idk = ""
		ElseIf fv.for_votes <> pp.for_votes Then
			idk = "For votes mismatch on proposition " & fv.prop_number & ". Folio file: " & fv.for_votes
			idk = idk & "; PP: " & pp.for_votes & ". "
		ElseIf
			idk = "Abstain votes mismatch on proposition " & fv.prop_number & ". Folio file: " & fv.abstain_votes
			idk = idk & "; PP: " & pp.abstain_votes & ". "
		ElseIf
			idk = "Against votes mismatch on proposition " & fv.prop_number & ". Folio file: " & fv.against_votes
			idk = idk & "; PP: " & pp.against_votes & ". "
		End If

		p_vote_record_statuses(i) = idk
		
	Next

	idk = ""
	For i = 0 to p_folio_vote_record_idk - 1
		idk = idk & p_vote_record_statuses(i)
	Next

	If p_mediant_swop_abstain <> p_pp_swop_abstain Then
		idk = idk & "SWOP Abstain mismatch. Mediant file: " & p_mediant_swop_abstain
		idk = idk & "; PP: " & p_pp_swop_abstain & "."
	End If

	If Len(idk) = 0 Then
		p_status = "Approved"
	Else
		p_status = idk
	End If

End Sub
